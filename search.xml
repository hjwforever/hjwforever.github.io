<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git趣味学习</title>
      <link href="posts/4c14.html"/>
      <url>posts/4c14.html</url>
      
        <content type="html"><![CDATA[<h2 id="代码管理"><a href="#代码管理" class="headerlink" title="代码管理"></a>代码管理</h2><blockquote><p>代码管理的重要性不言而喻，既可以降低灾难恢复代价，也利于团队协作开发，还利于重大更新的分支开发。</p></blockquote><p>有时候不小心写错或丢失项目代码， 通过代码管理工具来回溯项目代码往往可以成为我们的救命稻草。</p><p>谈到代码管理， 大家脑海中一定会浮现Git、SVN等。</p><p>不过相对于SVN， 具有分布式特性，更快速的Git是更受到个人喜爱的。下面来分享个可以通过沙盒趣味学习Git命令的网站。</p><h2 id="Git学习"><a href="#Git学习" class="headerlink" title="Git学习"></a>Git学习</h2><p><a href="https://learngitbranching.js.org/">LearnGitBranching</a>是一个非常有趣的Git学习网站，它不仅有生动有趣的可视化分支视图来帮助学习者理解Git工作流程，还有循序渐进的趣味闯关。<a href="https://github.com/pcottle/learnGitBranching">Github地址</a></p><h3 id="关卡示例"><a href="#关卡示例" class="headerlink" title="关卡示例"></a>关卡示例</h3><p>LearnGitBranching具有非常形象的可视化视图，让我们对git分支的操作及整个Git工作树的变化一目了然。<br><img src="https://cdn.jsdelivr.net/gh/hjwforever/images@main/img/2021/05/06/gitlearn2.png" alt="关卡示例"></p><h3 id="关卡"><a href="#关卡" class="headerlink" title="关卡"></a>关卡</h3><p>关卡设计得非常合理，从<code>git commit</code>提交开始学习，后面是<code>git branch</code>创建分支，<code>git checkout &lt;branch_name&gt;</code>切换分支等，最后还有关于远程仓库的关卡。<br><img src="https://cdn.jsdelivr.net/gh/hjwforever/images@main/img/2021/05/06/gitlearn3.png" alt="关卡"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>那么在LearnGitBranching，我们不仅可以把Git学得开心，还可以学得明白了 :)</p></blockquote><p>相关链接:<br><a href="https://learngitbranching.js.org/">LearnGitBranching</a><br><a href="https://github.com/pcottle/learnGitBranching">LearnGitBranching Github地址</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 代码管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nestjs 安装及使用</title>
      <link href="posts/2347.html"/>
      <url>posts/2347.html</url>
      
        <content type="html"><![CDATA[<h1 id="Nestjs-安装及使用"><a href="#Nestjs-安装及使用" class="headerlink" title="Nestjs 安装及使用"></a>Nestjs 安装及使用</h1><h2 id="Nestjs-简介"><a href="#Nestjs-简介" class="headerlink" title="Nestjs 简介"></a>Nestjs 简介</h2><blockquote><p><a href="https://github.com/nestjs/nest"><strong>Nest</strong></a> (NestJS)是一个用于构建高效、可扩展的<a href="https://nodejs.org/">Node.js</a>服务器端应用程序的开发框架。它利用 JavaScript 的渐进增强的能力，使用并完全支持 <a href="http://www.typescriptlang.org/">TypeScript</a>(仍然允许开发者使用纯 JavaScript 进行开发)，并结合了**OOP (面向对象编程)<strong>、</strong>FP (函数式编程)<strong>和</strong>FRP (函数响应式编程)**。</p></blockquote><h2 id="安装或直接构建项目"><a href="#安装或直接构建项目" class="headerlink" title="安装或直接构建项目"></a>安装或直接构建项目</h2><p>   要构建一个NestJs项目，方式有如三种</p><h3 id="方式①-使用Nest-CLI-构建项目-先全局安装-nest-cli"><a href="#方式①-使用Nest-CLI-构建项目-先全局安装-nest-cli" class="headerlink" title="方式①: 使用Nest CLI 构建项目 (先全局安装@nest/cli)"></a>方式①: 使用Nest CLI 构建项目 (先全局安装@nest/cli)</h3><blockquote><p>若要使用 Nest CLI 构建项目，请运行以下命令。这将创建一个新的项目目录，并使用核心的 Nest 文件和支撑模块填充该目录，从而为项目创建一个传统的基本结构。建议初学者使用 Nest CLI 创建新项目。</p></blockquote><pre class=" language-bash"><code class="language-bash">$ <span class="token function">npm</span> i -g @nestjs/cli$ nest new project-name</code></pre><h3 id="方式②-使用-Git-等版本控制工具-克隆NestJs项目的-starter-项目-启动项目-例子如下"><a href="#方式②-使用-Git-等版本控制工具-克隆NestJs项目的-starter-项目-启动项目-例子如下" class="headerlink" title="方式②: 使用 Git 等版本控制工具 克隆NestJs项目的 starter 项目 (启动项目), 例子如下"></a>方式②: 使用 <a href="https://git-scm.com/">Git</a> 等版本控制工具 克隆NestJs项目的 starter 项目 (启动项目), 例子如下</h3><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> clone https://github.com/nestjs/typescript-starter.git project$ <span class="token function">cd</span> project$ <span class="token function">npm</span> <span class="token function">install</span>$ <span class="token function">npm</span> run start</code></pre><blockquote><p>ps: 若要安装基于 JavaScript 的 starter project，请在执行上面的命令时使用 <a href="https://github.com/nestjs/javascript-starter.git">https://github.com/nestjs/javascript-starter.git</a></p></blockquote><h3 id="方式③-使用npm-等包管理器-从零构建"><a href="#方式③-使用npm-等包管理器-从零构建" class="headerlink" title="方式③: 使用npm 等包管理器 从零构建"></a>方式③: 使用npm 等包管理器 <strong>从零构建</strong></h3><blockquote><p>你还可以通过 <a href="https://www.npmjs.com/">npm</a> 等包管理器来安装的核心和支撑文件，从头开始手动创建一个新项目。<strong>当然，在这种情况下，你将自己担负起创建项目样板文件的工作。</strong></p></blockquote><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p>  这里推荐初学者使用第一种，熟练的话可以使用第二种。至于第三种， 如果你想深入了解整个NestJs项目构建及启动流程的话， 可以采用的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> nest </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node、npm及vue的下载、安装及配置</title>
      <link href="posts/6377.html"/>
      <url>posts/6377.html</url>
      
        <content type="html"><![CDATA[<h3 id="nodejs官网及安装包链接"><a href="#nodejs官网及安装包链接" class="headerlink" title="nodejs官网及安装包链接"></a>nodejs官网及安装包链接</h3><p><a href="https://nodejs.org/en/">Node.js官网</a>获取node安装程序</p><p><a href="https://nodejs.org/dist/v14.16.0/node-v14.16.0-x64.msi">v14.16.0</a> || <a href="https://nodejs.org/dist/v15.12.0/node-v15.12.0-x64.msi">v15.12.0</a>   （点击可以直接下载安装包）</p><h3 id="一、下载Nodejs并安装"><a href="#一、下载Nodejs并安装" class="headerlink" title="一、下载Nodejs并安装"></a>一、下载Nodejs并安装</h3><hr><h4 id="1-0-下载并打开安装程序"><a href="#1-0-下载并打开安装程序" class="headerlink" title="1.0 下载并打开安装程序"></a>1.0 下载并打开安装程序</h4><p>​    这里选择下载的是 <span style='color:green;'>v14.16.0</span></p><p><img src="https://img-blog.csdnimg.cn/img_convert/ec3b3a3a251782952b1b059b234e5fd8.png" alt="install"></p><h4 id="1-1-安装界面1"><a href="#1-1-安装界面1" class="headerlink" title="1.1 安装界面1:"></a>1.1 安装界面1:</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/5f335f2c546c91d253679f12719c75f2.png" alt="2021/03/29/nodejs-install1"></p><h4 id="1-2-安装界面2"><a href="#1-2-安装界面2" class="headerlink" title="1.2 安装界面2:"></a>1.2 安装界面2:</h4><p>​    勾选 <span style='font-family:微软雅黑;background:white;font-size:16;color:blue;'>I accept the terms in the License Agreement</span> , 点击 <span style='color:red;background:white;font-size:14;font-family:red;'>Next</span></p><p><img src="https://img-blog.csdnimg.cn/img_convert/07728cb6dee4b4fb6c1c520f6970fc31.png" alt="2021/03/29/node-install2"></p><h4 id="1-3-安装界面3"><a href="#1-3-安装界面3" class="headerlink" title="1.3 安装界面3:"></a>1.3 安装界面3:</h4><p>​    选择安装位置，点击 <span style='font-family:微软雅黑;background:white;font-size:16;color:red;'>Next</span></p><p><img src="https://img-blog.csdnimg.cn/img_convert/2dfe31f5cb6948a6dfa2985e363e9d69.png" alt="2021/03/29/node-install3"></p><h4 id="1-4-安装界面4"><a href="#1-4-安装界面4" class="headerlink" title="1.4 安装界面4:"></a>1.4 安装界面4:</h4><p>​    选择安装内容， 可以直接点击 <span style='font-family:微软雅黑;background:white;font-size:16;color:red;'>Next</span></p><p>​    <em>另外这步会<span style='font-family:微软雅黑;background:white;font-size:16;color:green;'>自动</span>将 nodejs启动程序位置 加入到 系统环境变量Path 中</em></p><p><img src="https://img-blog.csdnimg.cn/img_convert/c00f6b97d2f60b09cff0658b49d3cc3f.png" alt="2021/03/29/node-install4"></p><h4 id="1-5-安装界面5、6："><a href="#1-5-安装界面5、6：" class="headerlink" title="1.5 安装界面5、6："></a>1.5 安装界面5、6：</h4><p>接下来其实可以一路点击<span style='font-family:微软雅黑;background:white;font-size:16;color:red;'>Next</span>或者<span style='font-family:微软雅黑;background:white;font-size:16;color:red;'>Install</span>开始安装了</p><p><img src="https://img-blog.csdnimg.cn/img_convert/8888a6a7fff9bb082093bc94613a3178.png" alt="2021/03/29/node-install5"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/f220eeece077b81aed26c411b0f84264.png" alt="2021/03/29/node-install6"></p><h4 id="1-6-Nodejs-安装完成"><a href="#1-6-Nodejs-安装完成" class="headerlink" title="1.6 Nodejs 安装完成"></a>1.6 Nodejs 安装完成</h4><p>​        点击<span style='font-family:微软雅黑;background:white;font-size:16;color:red;'>Finish</span>完成安装，下一步测试是否成功安装</p><p><img src="https://img-blog.csdnimg.cn/img_convert/094d08b2745184f76c0644450fdca1a3.png" alt="2021/03/29/node-install7"></p><h3 id="二、测试Nodejs是否安装成功"><a href="#二、测试Nodejs是否安装成功" class="headerlink" title="二、测试Nodejs是否安装成功"></a>二、测试Nodejs是否安装成功</h3><hr><h4 id="2-1-打开-cmd-下面两种方式皆可"><a href="#2-1-打开-cmd-下面两种方式皆可" class="headerlink" title="2.1 打开 cmd (下面两种方式皆可)"></a>2.1 打开 <span style='font-family:微软雅黑;background:white;font-size:16;color:blue;'>cmd</span> (下面两种方式皆可)</h4><h5 id="①Windows搜索框输入cmd"><a href="#①Windows搜索框输入cmd" class="headerlink" title="①Windows搜索框输入cmd"></a>①Windows搜索框输入cmd</h5><p><img src="https://img-blog.csdnimg.cn/img_convert/1a238423e5ce74f8b7efde5b0d8ccc2a.png" alt="2021/03/29/cmd"></p><h5 id="②-⌘-R-输入cmd-输入cmd"><a href="#②-⌘-R-输入cmd-输入cmd" class="headerlink" title="② ⌘ + R 输入cmd 输入cmd"></a>② <kbd>⌘</kbd> + <kbd>R</kbd> 输入cmd 输入cmd</h5><p><img src="https://img-blog.csdnimg.cn/img_convert/ef239de239fb7419a28fa53ad784995e.png" alt="2021/03/29/open-cmd"></p><h4 id="2-2-输入-node-v-及-npm-v-查看-node及npm版本"><a href="#2-2-输入-node-v-及-npm-v-查看-node及npm版本" class="headerlink" title="2.2 输入 node -v  及  npm -v 查看 node及npm版本"></a>2.2 输入 <code>node -v</code>  及  <code>npm -v </code>查看 node及npm版本</h4><p>​    可以看到node版本的正是<span style='font-family:微软雅黑;background:white;font-size:16;color:blue;'>14.16.0</span>，说明安装成功了。</p><p>​    并且自带安装了npm，但注意这个npm并不是最新版的npm版本</p><p><img src="https://img-blog.csdnimg.cn/img_convert/4af5e798aa9d37f2dfd3744675f41208.png" alt="2021/03/29/npm-v"></p><h3 id="三、设置npm源并安装-vue"><a href="#三、设置npm源并安装-vue" class="headerlink" title="三、设置npm源并安装 vue"></a>三、设置npm源并安装 vue</h3><hr><h5 id="3-1-更换npm源"><a href="#3-1-更换npm源" class="headerlink" title="3.1  更换npm源"></a>3.1  更换npm源</h5><p>因为npm默认使用的是国外的源，为了加快包的下载速度，我们可以设置为淘宝镜像源，命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> registry<span class="token operator">=</span>http://registry.npm.taobao.org</code></pre><h5 id="3-2-查看镜像源更换是否生效"><a href="#3-2-查看镜像源更换是否生效" class="headerlink" title="3.2  查看镜像源更换是否生效"></a>3.2  查看镜像源更换是否生效</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> config get registry</code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/724fd3f35b9cfe323d21f4362ff0afbe.png" alt="2021/03/29/taobao-registry"></p><h5 id="3-3-设置全局安装的路径位置"><a href="#3-3-设置全局安装的路径位置" class="headerlink" title="3.3 设置全局安装的路径位置"></a>3.3 设置全局安装的路径位置</h5><pre class=" language-bash"><code class="language-bash">// 1. 查看当前npm全局安装的位置<span class="token function">npm</span> config get prefix// 2. 设置npm全局安装的位置 <span class="token punctuation">(</span>%Your_Path% 替换为你想要安装的路径位置, 如 E:\Soft\nodejs<span class="token punctuation">)</span><span class="token function">npm</span> config <span class="token keyword">set</span> %Your_Path%// 3. 再次查看你npm全局安装的位置<span class="token function">npm</span> config get prefix// 查看npm所有配置<span class="token function">npm</span> config list -l</code></pre><h5 id="3-4-升级npm"><a href="#3-4-升级npm" class="headerlink" title="3.4 升级npm"></a>3.4 升级npm</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token function">npm</span> -g// 查看npm版本<span class="token function">npm</span> -v</code></pre><h5 id="3-5-安装vue"><a href="#3-5-安装vue" class="headerlink" title="3.5 安装vue"></a>3.5 安装vue</h5><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> vue vue/cli -g</code></pre><h5 id="3-6-查看是否安装成功"><a href="#3-6-查看是否安装成功" class="headerlink" title="3.6 查看是否安装成功"></a>3.6 查看是否安装成功</h5><p>输入以下命令查看已安装的包</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> list -g</code></pre><p>可以看到有<span style='font-family:微软雅黑;font-size:16;color:green;'><a href="mailto:&#x76;&#117;&#x65;&#x40;&#50;&#46;&#54;&#46;&#x31;&#x32;">&#x76;&#117;&#x65;&#x40;&#50;&#46;&#54;&#46;&#x31;&#x32;</a></span>了，其实这已经可以跑前端的vue项目了 : )</p><p><img src="https://img-blog.csdnimg.cn/img_convert/ec3a039b553ecc9972f49c481325d6fa.png" alt="2021/03/30/npm-list"></p><h5 id="vue相关"><a href="#vue相关" class="headerlink" title="vue相关"></a>vue相关</h5><pre class=" language-bash"><code class="language-bash">// 启动vue可视化管理界面vue ui// 命令行创建新的vue项目应用 <span class="token punctuation">(</span><span class="token operator">&lt;</span>your_app_name<span class="token operator">></span> 换成项目小写名称,会新建一个目录<span class="token punctuation">)</span>vue create <span class="token operator">&lt;</span>your_app_name<span class="token operator">></span></code></pre><p>更多vue知识可以前往官网查看…<br>                  <a href="https://cn.vuejs.org/">Vue2</a> || <a href="https://www.vue3js.cn/docs/zh/">Vue3</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
